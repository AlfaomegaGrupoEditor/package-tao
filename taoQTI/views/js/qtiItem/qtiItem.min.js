
var initializing=false,fnTest=/xyz/.test(function(){xyz;})?/\b_super\b/:/.*/;Class=function(){};Class.extend=function(prop,traits){var _super=this.prototype;initializing=true;var prototype=new this();initializing=false;var implTraits=[];for(var t in traits){var trait=traits[t];implTraits.push(t);for(var name in trait){prop[name]=trait[name];}}
for(var name in prop){prototype[name]=typeof prop[name]=="function"&&typeof _super[name]=="function"&&fnTest.test(prop[name])?(function(name,fn){return function(){var tmp=this._super;this._super=_super[name];var ret=fn.apply(this,arguments);this._super=tmp;return ret;};})(name,prop[name]):prop[name];}
prototype.hasTrait=function(name){for(var i=0;i<implTraits.length;i++){if(implTraits[i]===name){return true;}}
return false;};Class=function(){if(!initializing&&this.init){this.init.apply(this,arguments);}};Class.prototype=prototype;Class.constructor=Class;Class.extend=arguments.callee;return Class;};if(!(typeof exports==='undefined')){exports.Class=Class;}
var ItemLoader=Class.extend({init:function(){this.item=null;},load:function(data){if(typeof data==='object'&&data.type==='assessmentItem'){this.item=new Qti.Item(data.serial,data.attributes||{});this.loadContainer(this.item.getBody(),data.body);for(var i in data.responses){var response=this.buildResponse(data.responses[i]);if(response){this.item.addResponseDeclaration(response);}}
for(var i in data.outcomes){var outcome=this.buildOutcome(data.outcomes[i]);if(outcome){this.item.addOutcomeDeclaration(outcome);}}
for(var i in data.feedbacks){var feedback=this.buildElement(data.feedbacks[i]);if(feedback){this.item.addModalFeedbacks(feedback);}}
this.item.setNamespaces(data.namespaces);this.item.setStylesheets(data.stylesheets);}
return this.item;},buildResponse:function(data){var response=this.buildElement(data);response.howMatch=data.howMath||null;response.correctResponses=data.correctResponses||{};response.mapping=data.mapping||{};response.areaMapping=data.areaMapping||{};response.mappingAttributes=data.mappingAttributes||{};return response;},buildOutcome:function(data){var outcome=this.buildElement(data);outcome.scale=data.scale||null;return outcome;},loadContainer:function(bodyObject,bodyData){if(!bodyObject instanceof Qti.Container){throw'bodyObject must be a QTI Container';}
if(bodyData&&typeof bodyData.body==='string'&&(typeof bodyData.elements==='array'||typeof bodyData.elements==='object')){for(var serial in bodyData.elements){var eltData=bodyData.elements[serial];var element=this.buildElement(eltData);if(element){bodyObject.setElement(element,bodyData.body);}}
bodyObject.body(bodyData.body);}else{throw'wrong bodydata format';}},buildElement:function(elementData){var elt=null;if(elementData&&elementData.type&&elementData.serial&&elementData.attributes){var className=elementData.type.charAt(0).toUpperCase()+elementData.type.slice(1);if(window.Qti[className]){elt=new window.Qti[className](elementData.serial,elementData.attributes);if(elt.body){if(elt.bdy){this.loadContainer(elt.getBody(),elementData.body);}else{}}
if(elt.object){if(elt.object){this.loadObjectData(elt.object,elementData.object);}}
if(elt instanceof Qti.Interaction){this.loadInteractionData(elt,elementData);}else if(elt instanceof Qti.Choice){this.loadChoiceData(elt,elementData);}else if(elt instanceof Qti.Math){this.loadMathData(elt,elementData);}}else{throw'the qti element class does not exist: '+className;}}else{throw'wrong elementData format';}
return elt;},loadInteractionData:function(interaction,data){if(interaction instanceof Qti.BlockInteraction){if(data.prompt){this.loadContainer(interaction.prompt.getBody(),data.prompt);}}
this.buildInteractionChoices(interaction,data);},buildInteractionChoices:function(interaction,data){if(data.choices){if(interaction instanceof Qti.MatchInteraction){for(var set=0;set<2;set++){if(!data.choices[set]){throw'missing match set #'+set;}
var matchSet=data.choices[set];for(var serial in matchSet){var choice=this.buildElement(matchSet[serial]);if(choice){interaction.addChoice(choice,set);}}}}else{for(var serial in data.choices){var choice=this.buildElement(data.choices[serial]);if(choice){interaction.addChoice(choice);}}}
if(interaction instanceof Qti.GraphicGapMatchInteraction){if(data.gapImgs){for(var serial in data.gapImgs){var gapImg=this.buildElement(data.gapImgs[serial]);if(gapImg){interaction.addGapImg(gapImg);}}}}}},loadChoiceData:function(choice,data){if(choice instanceof Qti.TextVariableChoice){choice.val(data.text);}else if(choice instanceof Qti.GapImg){}else if(choice instanceof Qti.ContainerChoice){}},loadObjectData:function(object,data){object.setAttributes(data.attributes);if(data.alt){if(data.alt.type&&data.alt.type==='object'){object.alt=data.alt;}}},loadMathData:function(math,data){math.mathML=data.mathML||'';math.annotations=data.annotations||{};}});
Qti={};Qti.traits={container:{initContainer:function(body){this.bdy=new Qti.Container(body||'');this.bdy.setRelatedItem(this.getRelatedItem()||null);},getBody:function(){return this.bdy;},body:function(body){return this.bdy.body(body);}},object:{initObject:function(object){this.object=object||new Qti.Object();},getObject:function(){return this.object;}}};
Qti.Element=Class.extend({qtiTag:'',serial:'',attributes:{},relatedItem:null,init:function(serial,attributes){if(!serial){serial=Qti.Element.buildSerial(this.qtiTag+'_');}
if(serial&&(typeof serial!=='string'||!serial.match(/^[a-z_0-9]*$/))){throw'invalid QTI serial: ('+(typeof serial)+') '+serial;}
if(!Qti.Element.instances[serial]){Qti.Element.instances[serial]=this;this.serial=serial;this.setAttributes(attributes);}else{throw'a QTI Element with the same serial already exists '+serial;}
if(typeof this.initContainer==='function'){this.initContainer(arguments[2]||'');}
if(typeof this.initObject==='function'){this.initObject();}},placeHolder:function(){return'{{'+this.serial+'}}';},getSerial:function(){return this.serial;},id:function(value){return this.attr('identifier',value);},attr:function(name,value){if(name){if(value){this.attributes[name]=value;}else{return this.attributes[name]||null;}}},setAttributes:function(attributes){this.attributes=attributes;},getAttributes:function(){var attrs={};for(var name in this.attributes){attrs[name]=this.attributes[name];}
return attrs;},getComposingElements:function(){var elts={};if(typeof this.initContainer==='function'){var container=this.getBody();elts[container.getSerial()]=container;elts=$.extend(elts,container.getComposingElements());}
if(typeof this.initObject==='function'){var object=this.getObject();elts[object.getSerial()]=object;elts=$.extend(elts,object.getComposingElements());}
return elts;},setRelatedItem:function(item,recursive){recursive=(typeof recursive==='undefined')?true:recursive;if(item instanceof Qti.Item){this.relatedItem=item;var composingElts=this.getComposingElements();for(var i in composingElts){composingElts[i].setRelatedItem(item,false);}}},getRelatedItem:function(){if(this.relatedItem instanceof Qti.Item){return this.relatedItem;}},setRenderer:function(renderer){if(renderer instanceof Qti.Renderer){this.renderer=renderer;var elts=this.getComposingElements();for(var serial in elts){elts[serial].setRenderer(renderer);}}else{throw'invalid qti rendering engine';}},getRenderer:function(){return this.renderer;},render:function(data,$container,tplName){var renderer=this.getRenderer();if(!renderer){throw'no renderer found';}
var defaultData={'tag':this.qtiTag,'serial':this.serial,'attributes':this.attributes};if(typeof this.initContainer==='function'){defaultData.body=this.getBody().render(renderer);}
if(typeof this.initObject==='function'){defaultData.object={attributes:this.object.getAttributes()};var url=defaultData.object.attributes.data;if(typeof(qti_base_www)!=='undefined'){if(!/^http(s)?:\/\//.test(url)){defaultData.object.attributes.data=qti_base_www+url;}}}
var tplData=$.extend(true,defaultData,data||{});var rendering=renderer.renderTpl(tplName||this.qtiTag,tplData);if($container){if($container.length&&$container.replaceWith){$container.replaceWith(rendering);}else{throw'invalid jQuery container in arg';}}
return rendering;},toArray:function(){var arr={serial:this.serial,type:this.qtiTag,attributes:this.getAttributes()}
if(typeof this.initContainer==='function'){arr.body=this.getBody().toArray();}
if(typeof this.initObject==='function'){arr.object=this.object.toArray();}
return arr;}});Qti.Element.instances=[];Qti.Element.buildSerial=function(prefix){var id=prefix||'';var chars="abcdefghijklmnopqrstuvwxyz0123456789";for(var i=0;i<22;i++){id+=chars.charAt(Math.floor(Math.random()*chars.length));}
return id;}
Qti.Math=Qti.Element.extend({qtiTag:'math',render:function(data,$container){var defaultData={block:(this.attr('display')==='block')?true:false,body:this.mathML};return this._super($.extend(true,defaultData,data||{}),$container);},postRender:function(data){var renderer=this.getRenderer();if(renderer){renderer.postRender(this.qtiTag,this,data);}}});
Qti.Object=Qti.Element.extend({qtiTag:'object',getMediaType:function(){var type='undefined';var mimetype=this.attr('type');if(mimetype!==''){if(mimetype.indexOf('video')===0){type='video';}else if(mimetype.indexOf('audio')===0){type='audio';}else if(mimetype.indexOf('image')===0){type='image';}else{type='object';}}
return type;},render:function(data,$container){var defaultData={};switch(this.getMediaType()){case'video':defaultData.video=true;break;case'audio':defaultData.audio=true;break;case'image':case'default':defaultData.object=true;}
return this._super($.extend(true,defaultData,data||{}),$container);},postRender:function(data){var renderer=this.getRenderer();if(renderer){renderer.postRender(this.qtiTag,this,data);}}});
Qti.Choice=Qti.Element.extend({init:function(serial,attributes){this._super(serial,attributes);}});
Qti.ContainerChoice=Qti.Choice.extend({init:function(serial,attributes){this._super(serial,attributes);}},{'container':Qti.traits.container});
Qti.SimpleChoice=Qti.ContainerChoice.extend({qtiTag:'simpleChoice'});
Qti.SimpleAssociableChoice=Qti.ContainerChoice.extend({qtiTag:'simpleAssociableChoice'});
Qti.Hottext=Qti.ContainerChoice.extend({qtiTag:'hottext'});
Qti.Hotspot=Qti.Choice.extend({});
Qti.HotspotChoice=Qti.Hotspot.extend({qtiTag:'hotspotChoice'});
Qti.AssociableHotspot=Qti.Hotspot.extend({qtiTag:'associableHotspot'});
Qti.TextVariableChoice=Qti.Choice.extend({init:function(serial,attributes,text){this._super(serial,attributes);this.val(text||'');},val:function(text){if(typeof text==='undefined'){return this.text;}else{if(typeof text==='string'){this.text=text;}else{throw'text must be a string';}}},render:function(data,$container,tplName){var data={'body':this.text};return this._super(data,$container,tplName);}});
Qti.InlineChoice=Qti.TextVariableChoice.extend({qtiTag:'inlineChoice'});
Qti.GapText=Qti.TextVariableChoice.extend({qtiTag:'gapText'});
Qti.GapImg=Qti.Choice.extend({qtiTag:'gapImg'},{'object':Qti.traits.object});
Qti.Gap=Qti.Choice.extend({qtiTag:'gap'});
Qti.Interaction=Qti.Element.extend({init:function(serial,attributes,body){this._super(serial,attributes);this.choices=[];},addChoice:function(choice){choice.setRelatedItem(this.getRelatedItem()||null);this.choices[choice.getSerial()]=choice;},getChoices:function(){var choices={};for(var i in this.choices){choices[i]=this.choices[i];}
return choices;},getComposingElements:function(){var elts=this._super();for(var serial in this.choices){if(this.choices[serial]instanceof Qti.Choice){elts[serial]=this.choices[serial];elts=$.extend(elts,this.choices[serial].getComposingElements());}}
return elts;},getResponseDeclaration:function(){var response=null;var responseId=this.attr('responseIdentifier');if(responseId){var item=this.getRelatedItem();if(item){response=item.getResponseDeclaration(responseId);}else{throw'cannot get response of an interaction out of its item context';}}else{}
return response;},render:function(data,$container){var defaultData={'_type':this.qtiTag.replace(/([A-Z])/g,function($1){return"_"+$1.toLowerCase();}),'choices':[]};try{var choices=(this.attr('shuffle'))?this.shuffleChoices():this.getChoices();for(var i in choices){if(choices[i]instanceof Qti.Choice){defaultData.choices.push(choices[i].render());}}}catch(e){}
var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);},postRender:function(data){var choices=this.getChoices();for(var i in choices){var c=choices[i];if(c instanceof Qti.ContainerChoice){c.getBody().postRender();}}
var renderer=this.getRenderer();if(renderer){renderer.postRender(this.qtiTag,this,data);}else{throw'no renderer found';}},setResponse:function(values){var ret=null;var renderer=this.getRenderer();if(renderer){ret=renderer.setResponse(this,values);}else{throw'no renderer found';}
return ret;},getResponse:function(){var ret=null;var renderer=this.getRenderer();if(renderer){ret=renderer.getResponse(this);}else{throw'no renderer found';}
return ret;},toArray:function(){var arr=this._super();arr.choices={};for(var serial in this.choices){if(this.choices[serial]instanceof Qti.Choice){arr.choices[serial]=this.choices[serial].toArray();}}
return arr;},shuffleChoices:function(choices){if(!choices)
choices=this.getChoices();var r=[];var f={};var j=0;for(var i in choices){if(choices[i]instanceof Qti.Choice){var choice=choices[i];if(choice.attr('fixed')){f[j]=choice;}
r.push(choice);j++;}else{throw'invalid element in array: is not a qti choice';}}
for(var n=0;n<r.length-1;n++){if(f[n]){continue;}
var k=-1;do{k=n+Math.floor(Math.random()*(r.length-n));}while(f[k]);var tmp=r[k];r[k]=r[n];r[n]=tmp;}
return r;}});
Qti.InlineInteraction=Qti.Interaction.extend({});
Qti.EndAttemptInteraction=Qti.InlineInteraction.extend({'qtiTag':'endAttemptInteraction'});
Qti.InlineChoiceInteraction=Qti.InlineInteraction.extend({'qtiTag':'inlineChoiceInteraction'});
Qti.TextEntryInteraction=Qti.InlineInteraction.extend({'qtiTag':'textEntryInteraction'});
Qti.Prompt=Qti.Element.extend({qtiTag:'prompt',},{'container':Qti.traits.container});
Qti.BlockInteraction=Qti.Interaction.extend({init:function(serial,attributes){this._super(serial,attributes);this.prompt=new Qti.Prompt('');},getComposingElements:function(){var elts=this._super();elts=$.extend(elts,this.prompt.getComposingElements());elts[this.prompt.getSerial()]=this.prompt;return elts;},render:function(data,$container){var defaultData={'prompt':this.prompt.render()};var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);},postRender:function(data){this.prompt.getBody().postRender();this._super(data);},toArray:function(){var arr=this._super();arr.prompt=this.prompt.toArray();return arr;}});
Qti.AssociateInteraction=Qti.BlockInteraction.extend({qtiTag:'associateInteraction'});
Qti.ChoiceInteraction=Qti.BlockInteraction.extend({qtiTag:'choiceInteraction'});
Qti.ExtendedTextInteraction=Qti.BlockInteraction.extend({qtiTag:'extendedTextInteraction',render:function(data,$container){var defaultData={'multiple':false,'maxStringLoop':[]};var response=this.getResponseDeclaration();if(this.attr('maxStrings')&&(response.attr('cardinality')==='multiple'||response.attr('cardinality')==='ordered')){defaultData.multiple=true;for(var i=0;i<this.attr('maxStrings');i++){defaultData.maxStringLoop.push(i+'');}}
var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);}});
Qti.MatchInteraction=Qti.BlockInteraction.extend({qtiTag:'matchInteraction',init:function(serial,attributes){this._super(serial,attributes);this.choices=[[],[]];},addChoice:function(choice,matchSet){matchSet=parseInt(matchSet);if(this.choices[matchSet]){choice.setRelatedItem(this.getRelatedItem()||null);this.choices[matchSet][choice.getSerial()]=choice;}},getChoices:function(matchSet){matchSet=parseInt(matchSet);if(this.choices[matchSet]){return this.choices[matchSet];}else{return this.choices;}},getComposingElements:function(){var elts=this._super();for(var i=0;i<2;i++){var matchSet=this.getChoices(i);for(var serial in matchSet){if(matchSet[serial]instanceof Qti.Choice){elts[serial]=matchSet[serial];elts=$.extend(elts,matchSet[serial].getComposingElements());}}}
return elts;},render:function(data,$container){var defaultData={'matchSet1':[],'matchSet2':[]};for(var i=0;i<2;i++){var matchSet=(this.attr('shuffle'))?this.shuffleChoices(this.getChoices(i)):this.getChoices(i);for(var serial in matchSet){if(matchSet[serial]instanceof Qti.Choice){defaultData['matchSet'+(i+1)].push(matchSet[serial].render());}}}
var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);},toArray:function(){var arr=this._super();arr.choices={0:{},1:{}};for(var i=0;i<2;i++){var matchSet=this.getChoices(i);for(var serial in matchSet){if(matchSet[serial]instanceof Qti.Choice){arr.choices[i][serial]=matchSet[serial].toArray();}}}
return arr;}});
Qti.OrderInteraction=Qti.BlockInteraction.extend({qtiTag:'orderInteraction'});
Qti.SliderInteraction=Qti.BlockInteraction.extend({qtiTag:'sliderInteraction'});
Qti.UploadInteraction=Qti.InlineInteraction.extend({'qtiTag':'uploadInteraction'});
Qti.ContainerInteraction=Qti.BlockInteraction.extend({},{'container':Qti.traits.container});
Qti.GapMatchInteraction=Qti.ContainerInteraction.extend({qtiTag:'gapMatchInteraction',});
Qti.HottextInteraction=Qti.ContainerInteraction.extend({qtiTag:'hottextInteraction',getChoices:function(){return this.getBody().getElements('Hottext');}});
Qti.ObjectInteraction=Qti.BlockInteraction.extend({},{'object':Qti.traits.object});
Qti.MediaInteraction=Qti.ObjectInteraction.extend({qtiTag:'mediaInteraction',render:function(data,$container){var defaultData={'media':this.object.render()};var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);}});
Qti.GraphicInteraction=Qti.ObjectInteraction.extend({render:function(data,$container){var defaultData={'backgroundImage':this.object.getAttributes()};var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);}});
Qti.GraphicAssociateInteraction=Qti.GraphicInteraction.extend({qtiTag:'graphicAssociateInteraction'});
Qti.GraphicGapMatchInteraction=Qti.GraphicInteraction.extend({qtiTag:'graphicGapMatchInteraction',gapImgs:{},addGapImg:function(gapImg){if(gapImg instanceof Qti.GapImg){gapImg.setRelatedItem(this.getRelatedItem()||null);this.gapImgs[gapImg.getSerial()]=gapImg;}},getGapImgs:function(){var gapImgs={};for(var id in this.gapImgs){gapImgs[id]=this.gapImgs[id];}
return gapImgs;},getComposingElements:function(){var elts=this._super();for(var serial in this.gapImgs){elts[serial]=this.gapImgs[serial];elts=$.extend(elts,this.gapImgs[serial].getComposingElements());}
return elts;},render:function(data,$container){var defaultData={'gapImgs':[]};var gapImgs=this.getGapImgs();for(var serial in gapImgs){if(gapImgs[serial]instanceof Qti.Choice){defaultData.gapImgs.push(gapImgs[serial].render());}}
var tplData=$.extend(true,defaultData,data||{});return this._super(tplData,$container);},toArray:function(){var arr=this._super();arr.gapImgs={};var gapImgs=this.getGapImgs();for(var serial in gapImgs){arr.gapImgs[serial]=gapImgs[serial].toArray();}
return arr;}});
Qti.GraphicOrderInteraction=Qti.GraphicInteraction.extend({qtiTag:'graphicOrderInteraction'});
Qti.HotspotInteraction=Qti.GraphicInteraction.extend({qtiTag:'hotspotInteraction'});
Qti.SelectPointInteraction=Qti.GraphicInteraction.extend({qtiTag:'selectPointInteraction'});
Qti.Feedback=Qti.Element.extend({});
Qti.FeedbackBlock=Qti.Feedback.extend({});
Qti.FeedbackInline=Qti.Feedback.extend({});
Qti.ModalFeedback=Qti.Element.extend({'qtiTag':'modalFeedback',postRender:function(data){var renderer=this.getRenderer();if(renderer){renderer.postRender(this.qtiTag,this,data);}else{throw'no renderer found';}}},{'container':Qti.traits.container});
Qti.Container=Qti.Element.extend({qtiTag:'_container',init:function(body){if(body&&typeof body!=='string'){throw'the body of a container must be a string';}
this.bdy='';this.body(body||'');this.elements=[];this._super();},body:function(body){if(typeof body==='undefined'){return this.bdy;}else{if(typeof body==='string'){this.bdy=body;}else{throw'body must be a string';}}},setElement:function(element,body){var returnValue=false;if(element instanceof Qti.Element){element.setRelatedItem(this.getRelatedItem()||null);this.elements[element.getSerial()]=element;this.body(body);returnValue=true;}else{throw'expected a qti element';}
return returnValue;},getElements:function(type){var elts={};if(typeof(type)==='string'){if(Qti[type]){for(var serial in this.elements){if(this.elements[serial]instanceof Qti[type]){elts[serial]=this.elements[serial];}}}else{throw'Qti.'+type+' is not a valid Qti Element subclass';}}else{elts=this.elements;}
return elts;},getComposingElements:function(){var elements=this.getElements();var elts={};for(var serial in elements){elts[serial]=elements[serial];elts=$.extend(elts,elements[serial].getComposingElements());}
return elts;},render:function(renderer){var data=[];var tpl=this.body();for(var serial in this.elements){var elt=this.elements[serial];if(typeof elt.render==='function'){tpl=tpl.replace(elt.placeHolder(),'{{{'+serial+'}}}');data[serial]=elt.render();}else{throw'render() is not defined for the qti element: '+serial;}}
if(renderer instanceof Qti.Renderer){return renderer.renderDirect(tpl,data);}else{throw'invalid qti renderer for qti container';}},postRender:function(renderer){for(var serial in this.elements){var elt=this.elements[serial];if(typeof elt.postRender==='function'){elt.postRender();}else{}}},toArray:function(){var arr={serial:this.serial,body:this.bdy,elements:{}};for(var serial in this.elements){arr.elements[serial]=this.elements[serial].toArray();}
return arr;}});
Qti.Item=Qti.Element.extend({qtiTag:'assessmentItem',responses:{},outcomes:{},modalFeedbacks:{},init:function(serial,attributes){this._super(serial,attributes);this.relatedItem=this;},postRender:function(){this.getBody().postRender(this.getRenderer());},getInteractions:function(){var interactions=[];var elts=this.getComposingElements();for(var serial in elts){if(elts[serial]instanceof Qti.Interaction){interactions.push(elts[serial]);}}
return interactions;},addResponseDeclaration:function(response){if(response instanceof Qti.ResponseDeclaration){response.setRelatedItem(this);this.responses[response.getSerial()]=response;}else{throw'is not a qti response declaration';}},getResponseDeclaration:function(identifier){for(var i in this.responses){if(this.responses[i].attr('identifier')===identifier){return this.responses[i];}}
return null;},addOutcomeDeclaration:function(outcome){if(outcome instanceof Qti.OutcomeDeclaration){outcome.setRelatedItem(this);this.outcomes[outcome.getSerial()]=outcome;}else{throw'is not a qti outcome declaration';}},addModalFeedbacks:function(feedback){if(feedback instanceof Qti.ModalFeedback){feedback.setRelatedItem(this);this.modalFeedbacks[feedback.getSerial()]=feedback;}else{throw'is not a qti modal feedback';}},getComposingElements:function(){var elts=this._super();for(var i in this.modalFeedbacks){var feedback=this.modalFeedbacks[i];elts[i]=feedback;elts=$.extend(elts,feedback.getComposingElements());}
return elts;},getResponses:function(){return this.responses;},getRelatedItem:function(){return this;},setNamespaces:function(namespaces){this.namespaces=namespaces;},setStylesheets:function(stylesheets){this.stylesheets=stylesheets;},toArray:function(){var arr=this._super();arr.outcomes={};for(var i in this.outcomes){arr.outcomes[i]=this.outcomes[i].toArray();}
arr.responses={};for(var i in this.responses){arr.responses[i]=this.responses[i].toArray();}
arr.namespaces=this.namespaces;arr.stylesheets=this.stylesheets;return arr;}},{'container':Qti.traits.container});
Qti.ResponseDeclaration=Qti.Element.extend({qtiTag:'responseDeclaration',howMatch:null,correctResponses:{},mapping:{},mappingAttributes:{},toArray:function(){var arr=this._super();arr.howMatch=this.howMatch;arr.correctResponses=this.correctResponses;arr.mapping=this.mapping;arr.mappingAttributes=this.mappingAttributes;return arr;}});
Qti.OutcomeDeclaration=Qti.Element.extend({qtiTag:'outcomeDeclaration',defaultValue:null,toArray:function(){var arr=this._super();arr.defaultValue=this.defaultValue;return arr;}});